/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode sortedListToBST(ListNode head) {
        List<Integer> list=new ArrayList<>();
        if(head==null)
            return null;
        ListNode start=head;
        while(start!=null){
            list.add(start.val);
            start=start.next;  
        } 
        return sortedListToBST(list,0,list.size()-1);
    }
    public TreeNode sortedListToBST(List<Integer> list, int start, int end){
        if(end<start)
            return null;
        
                 int mid=(start+end)/2;
        TreeNode result=new TreeNode(list.get(mid));
        result.left=sortedListToBST(list,start,mid-1);
        result.right=sortedListToBST(list,mid+1,end);
        return result;
       
    }
    
}

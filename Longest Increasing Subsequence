class Solution {
    int[][] memo;
   
    public int lengthOfLIS(int[] nums) {
        memo=new int[nums.length][nums.length];
        for(int i=0;i<nums.length;i++){
            for(int j=0;j<nums.length;j++){
                memo[i][j]=Integer.MIN_VALUE;
            }
        }
        return lengthOfLISRecursive(nums,0,-1);
        
        
    }
    public int lengthOfLISRecursive(int[] nums, int i, int last){
        if(i>=nums.length)
            return 0;
        if(last!=-1 && memo[i][last]!=Integer.MIN_VALUE)
            return memo[i][last];
        int x;
        if(last==-1 || nums[i]>nums[last]){
            x=Math.max(lengthOfLISRecursive(nums,i+1,last),
                       1+lengthOfLISRecursive(nums,i+1,i) );           
        }else{
            x=lengthOfLISRecursive(nums,i+1,last);
               
        }
        if(last!=-1)
            memo[i][last]=x;
         return x;
            
        
    }
}

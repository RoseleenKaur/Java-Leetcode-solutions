class Solution {
    int sum=0;
    int maxsum=-1;
    public int maxAreaOfIsland(int[][] grid) {
        
        for(int i=0;i<grid.length;i++){
            for(int j=0;j<grid[0].length;j++){
                sum=0;
                if(grid[i][j]==1)
                    dfs(grid,i,j);
                if(maxsum<sum)
                    maxsum=sum;
            }
        }
        return maxsum;
    }
    public void dfs(int[][] grid, int r,int c){
       
        grid[r][c]=2;
        sum++;
         //System.out.print(sum);
        int[] rows=new int[]{0,0,1,-1};
        int[] columns=new int[]{1,-1,0,0};
        int ro=r,co=c;
        for(int k=0;k<rows.length;k++){
            ro=r+rows[k];
            co=c+columns[k];
            if(ro>=0 && ro<grid.length && co>=0 && co<grid[0].length && grid[ro][co]==1){
                dfs(grid,ro,co);
            }
        }
    }
}

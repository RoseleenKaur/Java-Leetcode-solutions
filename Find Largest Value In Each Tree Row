/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<Integer> largestValues(TreeNode root) {
        
        int level=0,max=Integer.MIN_VALUE;
        HashMap<TreeNode,Integer> map=new HashMap<>();
        ArrayList<Integer> maxLevel=new ArrayList<>();
        if(root==null)
            return maxLevel;
        Queue<TreeNode> que=new LinkedList<>();
        que.add(root);
        map.put(root,0);
        while(!que.isEmpty()){
            TreeNode temp=que.remove();
            int dist=map.get(temp);
            
            if(dist!=level){
                level=dist;
                maxLevel.add(max);
                max=Integer.MIN_VALUE;
            }
            if(temp.val>max)
                max=temp.val;
            if(temp.left!=null){
                map.put(temp.left,dist+1);
                que.add(temp.left);
            }
            if(temp.right!=null){
                map.put(temp.right,dist+1);
                que.add(temp.right);
            }
        }
        //if(max!=Integer.MIN_VALUE)
            maxLevel.add(max);
        return maxLevel;
    }
}

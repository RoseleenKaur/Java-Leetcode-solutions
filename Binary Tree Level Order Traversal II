/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    HashMap<TreeNode,Integer> map;
    public List<List<Integer>> levelOrderBottom(TreeNode root) {
     
        List<List<Integer>> list=new ArrayList<>();
        if(root==null)
            return list;
        List<Integer> ar=new ArrayList<>();
        Queue<TreeNode> que=new LinkedList<>();
        map=new HashMap<>();
        que.add(root);
        //ar.add(root.val);
        map.put(root,1);
        //list.add(ar);
        int level=1;
        while(!que.isEmpty()){
            TreeNode temp=que.remove();
            int cur=map.get(temp);
            if(cur!=level){
                list.add(ar);
               ar=new ArrayList<>();
                level=cur;
            }
            ar.add(temp.val);
            if(temp.left!=null){
                map.put(temp.left,cur+1);
                que.add(temp.left);
            }
            if(temp.right!=null){
                map.put(temp.right,cur+1);
                que.add(temp.right);
            }
        }
        list.add(ar);
        Collections.reverse(list);
        return list;
    }
}

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {    
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        
        List<List<Integer>> result=new LinkedList<>();
        List<Integer> list=new ArrayList<>();
        if(root==null)
            return result;
        HashMap<TreeNode,Integer> map=new HashMap<>();
        map.put(root,0);
        Queue<TreeNode> que=new LinkedList<>();
        que.add(root);
        int length=0;
        while(!que.isEmpty()){
            TreeNode temp=que.remove();
            int dist=map.get(temp);
            if(dist!=length){
                if(dist%2==0)
                    Collections.reverse(list);
                result.add(new ArrayList<>(list));
                list=new LinkedList<>();
                length=dist;
            }
            list.add(temp.val);
            if(temp.left!=null){
                map.put(temp.left,dist+1);
            que.add(temp.left);
            }
            if(temp.right!=null){
                map.put(temp.right,dist+1);
                que.add(temp.right);
                
            }            
        }
        if(length%2==1)
            Collections.reverse(list);
        result.add(new ArrayList<>(list));
        return result;
    }
}

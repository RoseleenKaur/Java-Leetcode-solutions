class Solution {
    public int[][] merge(int[][] intervals) {
        if(intervals.length==0)
            return new int[0][0];
        TreeSet<int[]> treeset=new TreeSet<>((a,b)->a[0]==b[0]?a[1]-b[1]:a[0]-b[0]);
        for(int[] ar:intervals){
            treeset.add(ar);
        }
        
        List<int[]> result=new ArrayList<>();
        int[] temp=treeset.first();
        int start=temp[0];
        int end=temp[1];
        treeset.remove(temp);
        while(!treeset.isEmpty()){
            temp=treeset.first();
            
            if(temp[0]<=end)
                end=temp[1]>end?temp[1]:end;
            
            else{
                result.add(new int[]{start,end});
                start=temp[0];
                end=temp[1];
            }
            treeset.remove(temp);
        }
        result.add(new int[]{start,end});
        int[][] ans=new int[result.size()][2];
        for(int i=0;i<result.size();i++){
            ans[i]=result.get(i);
        }
        return ans;
    }
}

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        TreeNode node1=null,node2=null;
        if(root.left!=null){
            node1=lowestCommonAncestor(root.left,p,q);
        }
        if(root.right!=null){
            node2=lowestCommonAncestor(root.right,p,q);
        }
        if(node1!=null && node1!=p && node1!=q)
            return node1;
        if(node2!=null && node2!=p && node2!=q)
            return node2;
        if(root!=p && root!=q)
        {
            if(node1!=null && node2!=null)
                return root;
        }
        if(root==p || root==q)
        {
            if(node1!=null ||node2!=null)
                return root;
        }
        if(node1==null && node2==null )
        {
            if(root!=p && root!=q)
                return null;
            else return root==p?p:q;
        }
        else return node1==null?node2:node1;
    }
    
}
